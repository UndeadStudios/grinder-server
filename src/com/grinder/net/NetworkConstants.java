package com.grinder.net;

import com.grinder.net.session.Session;
import io.netty.util.AttributeKey;

import java.math.BigInteger;

/**
 * Holds various network-related constants such as port numbers.
 *
 * @author Swiffy
 * @author Stan van der Bend
 */
public class NetworkConstants {

    public static final int GAME_PORT = 5555;

    public static final int WEB_PORT = 8080;

    /**
     * The maximum amount of messages that can be processed in one sequence.
     */
    public static final int PACKET_PROCESS_LIMIT = 1000;

    /**
     * The number of seconds before a connection becomes idle.
     */
    public static final int SECONDS_TILL_IDLE_DISCONNECT = 60;

    /**
     * The modulus used when decrypting the RSA block.
     */
    public static final BigInteger RSA_MODULUS = new BigInteger("65672264916231626826998354696249025278521758435867349511182700702097499052981337016732629372849876242108149324018633435138653830239163152031469190272457385401153536874226456824492653627441835732900225277736647133156098611405349076508448895319565223151344494462635655056096355457788931055172717380593008751680552212094445271484699550651361905107023580353026181062008345867473464481393479838844433982265843906048041569992095650576691544730131302292490367777002784368387579025616686753942130928038783840250157389812999606608016152812377430991617727744903231176930422163487331625243430030245758552240707453");

    /**
     * The exponent used when decrypting the RSA block.
     */
    public static final BigInteger RSA_EXPONENT = new BigInteger("15402724934424772814712173429300147512949295038187848533445066031279134808480341353497981996278063501799660699444442292621210125953372550008021620209621167752584509747070126308028694919013815967322418828205288662644649461463167686268998702564307750508252074772802732103502709610474596933778778992890960618737939196905072102495230552075933225830830928448644460317040317405086515608707543046594006428846908714821457865268864947439388662253635438972596843872555089074185302463702680601227563815549063695245503001515655045922478661970487181237885925108450265311900398404597404377880860781272783476142819477");

    /**
     * The opcode for requesting a login.
     */
    public static final int LOGIN_REQUEST_OPCODE = 14;

    /**
     * Signifies a new connection.
     */
    public static final int NEW_CONNECTION_OPCODE = 16;

    /**
     * Signifies the return of an existing connection.
     */
    public static final int RECONNECTION_OPCODE = 18;

    /**
     * The attribute that contains the key for a players session.
     */
    public static final AttributeKey<Session> SESSION_KEY = AttributeKey.valueOf("session.key");


}
